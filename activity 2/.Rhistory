#pnrom with 5 gives me all probability (area of the curve) below 5
pnorm(5,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#pnrom with 5 gives me all probability (area of the curve) below 5
pnorm(5,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))- pnorm(0,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#pnrom of 20 gives me all probability (area of the curve) below 20
#subtracting from one leaves me with the area above 20
1 - pnorm(20,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#pnrom of 20 gives me all probability (area of the curve) below 20
#subtracting from one leaves me with the area above 20
qnorm(0.95,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#prob that we see temperatures higher than the current threshold in aberdeen
1 - pnorm(18.51026,
mean(datW$TAVE[datW$siteN == 1]+4,na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#histogram of daily precipiation for aberdeen
hist(datW$PRCP[datW$siteN == 1],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Daily Precipitation",
ylab="Relative frequency",
col="grey50",
border="white")
#histogram of daily precipiation for aberdeen
hist(datW$PRCP[datW$siteN == 1],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Daily Precipitation",
ylab="Relative frequency",
col="grey50",
border="white")
View(averageTemp)
View(datW)
#get precipitation for each year and site in the data
yearlyPRCP <- aggregate(datW$PRCP, by=list(datW$NAME), FUN="sum",na.rm=TRUE)
View(yearlyPRCP)
help("aggregate")
#get precipitation for each year and site in the data
yearlyPRCP <- aggregate(datW$PRCP, by=list(datW$NAME),list(datW$year), FUN="sum",na.rm=TRUE)
#get precipitation for each year and site in the data
yearlyPRCP <- aggregate(datW$PRCP, by=datW$NAME,datW$year, FUN="sum",na.rm=TRUE)
View(averageTemp)
#get precipitation for each year and site in the data
yearlyPRCP <- data.frame(datW$NAME, datW$PRCP, datW$year)
View(yearlyPRCP)
help(sum())
help(sum)
yearlyPRCP$pbyyr <- sum(datW$PRCP, by=datW$year)
View(yearlyPRCP)
#get precipitation for each year and site in the data
#create new dataframe
yearlyPRCP <- aggregate(datW$PRCP ~ datW$NAME+datW$year, FUN="mean",na.rm=TRUE)
View(yearlyPRCP)
yearlyPRCP <- aggregate(datW$PRCP ~ datW$NAME+datW$year, FUN="sum",na.rm=TRUE)
View(yearlyPRCP)
sumyearlyPRCP <- aggregate(datW$PRCP ~ datW$NAME+datW$year, FUN="sum",na.rm=TRUE)
View(sumyearlyPRCP)
names(sumyearlyPRCP)<- c("Site", "Year", "Precipitation")
View(sumyearlyPRCP)
hist(sumyearlyPRCP$Precipitation[sumyearlyPRCP$Site == "ABERDEEN, WA US"],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Yearly Precipitation",
ylab="Relative frequency",
col="grey50",
border="white")
hist(sumyearlyPRCP$Precipitation[sumyearlyPRCP$Site == "ABERDEEN, WA US"],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Yearly Precipitation in Inches",
ylab="Relative frequency",
col="grey50",
border="white")
#read in weather station file from the data folder
datW <- read.csv("C:\\Users\\acanaan\\Documents\\GitHub\\GEOG331\\a02\\2011124.csv")
#get more information about the dataframe
str(datW)
#specify a column with a proper date format
#note the format here dataframe$column
datW$dateF <- as.Date(datW$DATE, "%Y-%m-%d")
#google date formatting in r to find more options and learn more
#create a date column by reformatting the date to only include years
#and indicating that it should be treated as numeric data
datW$year <- as.numeric(format(datW$dateF,"%Y"))
#descriptive statistics on weather data
#precipitation
summary(datW$PRCP)
#snowfall
summary(datW$SNOW)
#snow depth
summary(datW$SNWD) #doesn't exist though
#max temperature
summary(datW$TMAX)
#min temperature
summary(datW$TMIN)
#find out all unique site names
levels(datW$NAME)
#look at the mean maximum temperature for Aberdeen
mean(datW$TMAX[datW$NAME == "ABERDEEN, WA US"])
#look at the mean maximum temperature for Aberdeen
#with na.rm argument set to true to ingnore NA
mean(datW$TMAX[datW$NAME == "ABERDEEN, WA US"], na.rm=TRUE)
#calculate the average daily temperature
#This temperature will be halfway between the minimum and maximum temperature
datW$TAVE <- datW$TMIN + ((datW$TMAX-datW$TMIN)/2)
#get the mean across all sites
#the by function is a list of one or more variables to index over.
#FUN indicates the function we want to use
#if you want to specify any function specific arguments use a comma and add them after the function
#here we want to use the na.rm arguments specific to
averageTemp <- aggregate(datW$TAVE, by=list(datW$NAME), FUN="mean",na.rm=TRUE)
averageTemp
#change the automatic output of column names to be more meaningful
#note that MAAT is a common abbreviation for Mean Annual Air Temperature
colnames(averageTemp) <- c("NAME","MAAT")
averageTemp
#convert level to number for factor data type
#you will have to reference the level output or look at the row of data to see the character designation.
datW$siteN <- as.numeric(datW$NAME)
#QUESTION NUMBER 1
#make a histogram for the first site in our levels
#main= is the title name argument.
#Here you want to paste the actual name of the factor not the numeric index
#since that will be more meaningful.
hist(datW$TAVE[datW$siteN == 1],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="grey50",
border="white")
#QUESTION NUMBER 2
#add all histograms into the same window
par(mfrow=c(2,2))
#make a histogram for the first site in our levels, Aberdeen
#main= is the title name argument.
#Here you want to paste the actual name of the factor not the numeric index
#since that will be more meaningful.
hist(datW$TAVE[datW$siteN == 1],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="grey50",
border="white")
#add mean line with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
col = "tomato3",
lwd = 3)
#add standard deviation line below the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE) - sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#add standard deviation line above the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE) + sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#histogram for Livermore
hist(datW$TAVE[datW$siteN == 2],
freq=FALSE,
main = paste(levels(datW$NAME)[2]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="pink",
border="white")
#add mean line with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 2],na.rm=TRUE),
col = "tomato3",
lwd = 3)
#add standard deviation line below the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 2],na.rm=TRUE) - sd(datW$TAVE[datW$siteN == 2],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#add standard deviation line above the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 2],na.rm=TRUE) + sd(datW$TAVE[datW$siteN == 2],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#histogram for mandan experiement station
hist(datW$TAVE[datW$siteN == 3],
freq=FALSE,
main = paste(levels(datW$NAME)[3]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="orange",
border="white")
#add mean line with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 3],na.rm=TRUE),
col = "tomato3",
lwd = 3)
#add standard deviation line below the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 3],na.rm=TRUE) - sd(datW$TAVE[datW$siteN == 3],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#add standard deviation line above the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 3],na.rm=TRUE) + sd(datW$TAVE[datW$siteN == 3],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#histogram for mormon flat
hist(datW$TAVE[datW$siteN == 4],
freq=FALSE,
main = paste(levels(datW$NAME)[4]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="blue",
border="white")
#add mean line with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 4],na.rm=TRUE),
col = "tomato3",
lwd = 3)
#add standard deviation line below the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 4],na.rm=TRUE) - sd(datW$TAVE[datW$siteN == 4],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#add standard deviation line above the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 4],na.rm=TRUE) + sd(datW$TAVE[datW$siteN == 4],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#make a histogram for the first site in our levels
#main= is the title name argument.
#Here you want to paste the actual name of the factor not the numeric index
#since that will be more meaningful.
#note I've named the histogram so I can reference it later
h1 <- hist(datW$TAVE[datW$siteN == 1],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="grey50",
border="white")
#the seq function generates a sequence of numbers that we can use to plot the normal across the range of temperature values
x.plot <- seq(-10,30, length.out = 100)
#the dnorm function will produce the probability density based on a mean and standard deviation.
y.plot <-  dnorm(seq(-10,30, length.out = 100),
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#create a density that is scaled to fit in the plot  since the density has a different range from the data density.
#!!! this is helpful for putting multiple things on the same plot
#!!! It might seem confusing at first. It means the maximum value of the plot is always the same between the two datasets on the plot. Here both plots share zero as a minimum.
y.scaled <- (max(h1$density)/max(y.plot)) * y.plot
#points function adds points or lines to a graph
#the first two arguements are the x coordinates and the y coordinates.
points(x.plot,
y.scaled,
type = "l",
col = "royalblue3",
lwd = 4,
lty = 2)
help(dnorm)
#pnorm(value to evaluate at (note this will evaluate for all values and below),mean, standard deviation)
pnorm(0,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#pnrom with 5 gives me all probability (area of the curve) below 5
pnorm(5,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#pnrom with 5 gives me all probability (area of the curve) below 5
pnorm(5,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))- pnorm(0,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#pnrom of 20 gives me all probability (area of the curve) below 20
#subtracting from one leaves me with the area above 20
1 - pnorm(20,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#pnrom of 20 gives me all probability (area of the curve) below 20
#subtracting from one leaves me with the area above 20
qnorm(0.95,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#QUESTION NUMBER 6
#prob that we see temperatures higher than the current threshold in aberdeen
1 - pnorm(18.51026,
mean(datW$TAVE[datW$siteN == 1]+4,na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#QUESTION NUMBER 7
#histogram of daily precipiation for aberdeen
hist(datW$PRCP[datW$siteN == 1],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Daily Precipitation",
ylab="Relative frequency",
col="grey50",
border="white")
#QUESTION NUMBER 8
#get precipitation for each year and site in the data
#create new dataframe with just values of interest- sum of precip
sumyearlyPRCP <- aggregate(datW$PRCP ~ datW$NAME+datW$year, FUN="sum",na.rm=TRUE)
names(sumyearlyPRCP)<- c("Site", "Year", "Precipitation")
#histogram of yearly precipiation for aberdeen
hist(sumyearlyPRCP$Precipitation[sumyearlyPRCP$Site == "ABERDEEN, WA US"],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Yearly Precipitation in Inches",
ylab="Relative frequency",
col="grey50",
border="white")
par(mfrow=c(1,1))
h1 <- hist(datW$TAVE[datW$siteN == 1],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="grey50",
border="white")
hist(sumyearlyPRCP$Precipitation[sumyearlyPRCP$Site == "ABERDEEN, WA US"],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Yearly Precipitation in Inches",
ylab="Relative frequency",
col="grey50",
border="white")
#create new dataframe with just values of interest- mean of precip
meanyearlyPRCP <- aggregate(datW$PRCP ~ datW$NAME+datW$year, FUN="mean",na.rm=TRUE)
View(meanyearlyPRCP)
#get more information about the dataframe
str(datW)
#look at the mean maximum temperature for Aberdeen
mean(datW$TMAX[datW$NAME == "ABERDEEN, WA US"])
datW$year <- as.numeric(format(datW$dateF,"%Y"))
levels(datW$NAME)
#look at the mean maximum temperature for Aberdeen
mean(datW$TMAX[datW$NAME == "ABERDEEN, WA US"])
#look at the mean maximum temperature for Aberdeen
#with na.rm argument set to true to ingnore NA
mean(datW$TMAX[datW$NAME == "ABERDEEN, WA US"], na.rm=TRUE)
#calculate the average daily temperature
#This temperature will be halfway between the minimum and maximum temperature
datW$TAVE <- datW$TMIN + ((datW$TMAX-datW$TMIN)/2)
#get the mean across all sites
#the by function is a list of one or more variables to index over.
#FUN indicates the function we want to use
#if you want to specify any function specific arguments use a comma and add them after the function
#here we want to use the na.rm arguments specific to
averageTemp <- aggregate(datW$TAVE, by=list(datW$NAME), FUN="mean",na.rm=TRUE)
averageTemp
#change the automatic output of column names to be more meaningful
#note that MAAT is a common abbreviation for Mean Annual Air Temperature
colnames(averageTemp) <- c("NAME","MAAT")
averageTemp
#you will have to reference the level output or look at the row of data to see the character designation.
datW$siteN <- as.numeric(datW$NAME)
hist(datW$TAVE[datW$siteN == 1],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="grey50",
border="white")
#QUESTION NUMBER 2
#add all histograms into the same window
par(mfrow=c(2,2))
#make a histogram for the first site in our levels, Aberdeen
#main= is the title name argument.
#Here you want to paste the actual name of the factor not the numeric index
#since that will be more meaningful.
hist(datW$TAVE[datW$siteN == 1],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="grey50",
border="white")
#QUESTION NUMBER 2
#add all histograms into the same window
par(mfrow=c(2,2))
#make a histogram for the first site in our levels, Aberdeen
#main= is the title name argument.
#Here you want to paste the actual name of the factor not the numeric index
#since that will be more meaningful.
hist(datW$TAVE[datW$siteN == 1],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="grey50",
border="white")
#add mean line with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
col = "tomato3",
lwd = 3)
#add standard deviation line below the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE) - sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#add standard deviation line above the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE) + sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#histogram for Livermore
hist(datW$TAVE[datW$siteN == 2],
freq=FALSE,
main = paste(levels(datW$NAME)[2]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="pink",
border="white")
#add mean line with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 2],na.rm=TRUE),
col = "tomato3",
lwd = 3)
#add standard deviation line below the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 2],na.rm=TRUE) - sd(datW$TAVE[datW$siteN == 2],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#add standard deviation line above the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 2],na.rm=TRUE) + sd(datW$TAVE[datW$siteN == 2],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#histogram for mandan experiement station
hist(datW$TAVE[datW$siteN == 3],
freq=FALSE,
main = paste(levels(datW$NAME)[3]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="orange",
border="white")
#add mean line with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 3],na.rm=TRUE),
col = "tomato3",
lwd = 3)
#add standard deviation line below the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 3],na.rm=TRUE) - sd(datW$TAVE[datW$siteN == 3],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#add standard deviation line above the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 3],na.rm=TRUE) + sd(datW$TAVE[datW$siteN == 3],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#histogram for mormon flat
hist(datW$TAVE[datW$siteN == 4],
freq=FALSE,
main = paste(levels(datW$NAME)[4]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="blue",
border="white")
#add mean line with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 4],na.rm=TRUE),
col = "tomato3",
lwd = 3)
#add standard deviation line below the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 4],na.rm=TRUE) - sd(datW$TAVE[datW$siteN == 4],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#add standard deviation line above the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 4],na.rm=TRUE) + sd(datW$TAVE[datW$siteN == 4],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
meandata <- data.frame(meanyearlyPRCP, averageTemp)
View(meandata)
meanPRCP <- aggregate(datW$PRCP ~ datW$NAME, FUN = "mean", na.rm=TRUE)
View(meanPRCP)
#second compare the values side by side by creating a new data frame
comparePRCPTEMP<- data.frame(meanPRCP,averageTemp)
View(comparePRCPTEMP)
#second compare the values side by side by creating a new data frame
comparePRCPTEMP<- data.frame(meanPRCP,averageTemp$MAAT)
#second compare the values side by side by creating a new data frame
comparePRCPTEMP<- data.frame(meanPRCP,averageTemp$MAAT)
View(comparePRCPTEMP)
